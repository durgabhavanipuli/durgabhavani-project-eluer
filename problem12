import java.util.*;

public class Main {

    public static void main(String[] args) {
        int n = 1;
        long triangleNumber = 0;
        
        while (true) {
            triangleNumber = getNthTriangleNumber(n);
            int numDivisors = numberOfDivisors(triangleNumber);
            
            if (numDivisors > 500) {
                System.out.println("The first triangle number with over 500 divisors is: " + triangleNumber);
                break;
            }
            
            n++;
        }
    }
    
    public static long getNthTriangleNumber(int n) {
        return (long) n * (n + 1) / 2;
    }
    
    public static int numberOfDivisors(long n) {
        Map<Long, Integer> factors = new HashMap<>();
        long num = n;
        
        for (long i = 2; i <= num / i; i++) {
            while (num % i == 0) {
                factors.put(i, factors.getOrDefault(i, 0) + 1);
                num /= i;
            }
        }
        
        if (num > 1) {
            factors.put(num, 1);
        }
        
        int divisors = 1;
        for (int exponent : factors.values()) {
            divisors *= (exponent + 1);
        }
        
        return divisors;
    }
}
